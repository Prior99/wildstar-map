var FS = require("fs");
var MySQL = require("mysql");
var WS = require("ws");
var WebSocket = require("./websocket_server.js");
var Client = require("./client.js");
var DatabaseBackend = require("./database.js");


var config;
var clients = [];
var wsServer;
var databasePool;
var db;

function startDatabase() {
    FS.readFile("database_config.json", function(err, data) {
        process.stdout.write("Connecting to Database ... \r");
        if(err) {
            console.log("Connecting to Database ... Failed.");
            console.error("Database-Configfile not found. You can create one using \"grunt setup-database\"");
        }
        else {
            var dbConf = JSON.parse(data);
            dbConf.connectionLimit = 10;
            databasePool = MySQL.createPool(dbConf);
            databasePool.getConnection(function(err, conn) {
                if(err) {
                    console.log("Connecting to Database ... Failed.");
                    conn.release();
                    shutdown();
                }
                else {
                    conn.release();
                    console.log("Connecting to Database ... Done.");
                    db = new DatabaseBackend(databasePool);
                    startWebsocketServer();
                }
            });
        }
    });
}

function shutdown() {
    process.stdout.write("Shutting down databasepool ... \r");
    if(databasePool) databasePool.end();
    console.log("Shutting down databasepool ... Done.");
    process.stdout.write("Shutting down websocketserver ... \r");
    if(wsServer) wsServer.close();
    console.log("Shutting down websocketserver ... Done.");
}

function startWebsocketServer() {
    process.stdout.write("Starting websocketserver ... \r");
    FS.readFile("server_config.json", function(err, data) {
        if(err) {
            console.log("Starting websocketserver ... Failed.");
            console.error("Server-Configfile not found. You can create one using \"grunt serverconfig\"");
            shutdown();
        }
        else {
            config = JSON.parse(data);
            var portfile = "/*\n * This is an generated file.\n * Do not edit this file!\n * It will be overwritten on every start of the server.\n */\n\nvar _port = " + config.port + ";\n";
            FS.writeFile(config.htdocsDirectory + "/port.js", portfile, function(err) {
                if(err) {
                    console.error("Unable to create file \"port.js\" in htdocs-directory. Please create it manually with the following content:\n" + portfile + "\n");
                }
                wsServer = new WS.Server({
                    host : config.host,
                    port : config.port
                }).on("connection", function(ws) {
                    var client = new Client(ws, db);
                    clients.push(client);
                    ws.on("close", function() {
                        clients.splice(clients.indexOf(client), 1);
                    });
                });
                console.log("Starting websocketserver ... Done.");
            });
        }
    });
}

startDatabase();
